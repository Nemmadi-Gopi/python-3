What is the Recursive funcation():
Iterator: Iteration is the repetition of some kind of process over and over again. Pythonâ€™
recursion:
Recursion is the process of defining something interms of itself.
A physical word example would be placed two parall mirror facing eacother. so any object in between them would  be reflected as recursion.

Python recursive function:
We know that in the python, A function can other funtion. it is even possible for the function to call itself. these type of constructs are termed as recursive funcation.
Programme:
def cal_fact(x):
	if n==1:
		return 1
	else:
		return(n * cal_fact(x-1))

cal_fact(5)

#in the above example, cal_fact() is a recursive funcation as it call itself.
when we calling the function with positive integers, it will call recursively by decreasing the number.
Each function call multiple the number with factorial of the number 1 unitll the number is equal to one. the recurisve funcation can be explained as below.

cal_fact(5)
5*cal_fact(4)  		#when we calling the function 1st time.
5*4*cal_fact(3) 	#when we calling the function 2st time.
5*4*3*cal_fact(2) 	#when we calling the function 3st time.
5*4*3*2*cal_fact(1) 	#when we calling the function 4st time.
5*4*3*2*1 		#return the function with 5 time as n ==1
5*4*3*2			#retrun the function with 4 time
5*4*6			#retrun the function with 3 time
5*24			#return the function with 2 time
125			# return the function with 1st call
advantages:
1. Recursion function make the code look clear and elegant
2. A complex task can be break down into the simpler sub-problems using recursion
3.sequence generation is very easy with recursion than normal iteration.

disadvantages:
1. sometimes logic behind recursion is very hard to follow through.
2. recursive call are expensive(inefficient)as they take up the lots of memory and time.
3. recursive functions are very hard to debug.

